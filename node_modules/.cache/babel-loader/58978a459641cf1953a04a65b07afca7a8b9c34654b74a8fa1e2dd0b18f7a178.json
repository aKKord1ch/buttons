{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { isDOMComponent } from \"react-dom/test-utils\";\nfunction App() {\n  _s();\n  const [color, setColor] = useState('red');\n  function handleEnter(e) {\n    if (e.keyCode === 13) {\n      setColor('green');\n    }\n  }\n  useEffect(() => {\n    window.addEventListener('keydown', e => handleEnter);\n    document.body.style.backgroundColor = color;\n  }, [handleEnter, color]);\n}\n_s(App, \"TwQtTySGoOaUZJIWqmvUDBCv6Xs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","isDOMComponent","App","_s","color","setColor","handleEnter","e","keyCode","window","addEventListener","document","body","style","backgroundColor","_c","$RefreshReg$"],"sources":["C:/Users/akkor/OneDrive/Рабочий стол/js_practic/buttons/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { isDOMComponent } from \"react-dom/test-utils\";\n\nfunction App() {\nconst [color, setColor] = useState('red');\n\n\n  function handleEnter(e) {\n    if (e.keyCode === 13){\n      setColor('green')\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('keydown', (e)=>handleEnter);\n    document.body.style.backgroundColor = color;\n  }, [handleEnter,color])\n\n}\n\nexport default App;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,cAAc,QAAQ,sBAAsB;AAErD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAGvC,SAASO,WAAWA,CAACC,CAAC,EAAE;IACtB,IAAIA,CAAC,CAACC,OAAO,KAAK,EAAE,EAAC;MACnBH,QAAQ,CAAC,OAAO,CAAC;IACnB;EACF;EAEAL,SAAS,CAAC,MAAM;IACdS,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAGH,CAAC,IAAGD,WAAW,CAAC;IACpDK,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAGV,KAAK;EAC7C,CAAC,EAAE,CAACE,WAAW,EAACF,KAAK,CAAC,CAAC;AAEzB;AAACD,EAAA,CAfQD,GAAG;AAAAa,EAAA,GAAHb,GAAG;AAiBZ,eAAeA,GAAG;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}